import*as s from"@angular/common";import{CommonModule as h}from"@angular/common";import*as e from"@angular/core";import{forwardRef as p,EventEmitter as d}from"@angular/core";import{NG_VALUE_ACCESSOR as m,NgControl as f}from"@angular/forms";var b=["input"],C=(o,a,t)=>({"p-radiobutton-label":!0,"p-radiobutton-label-active":o,"p-disabled":a,"p-radiobutton-label-focus":t});function v(o,a){if(o&1){let t=e.ɵɵgetCurrentView();e.ɵɵelementStart(0,"label",7),e.ɵɵlistener("click",function(n){e.ɵɵrestoreView(t);let r=e.ɵɵnextContext();return e.ɵɵresetView(r.select(n))}),e.ɵɵtext(1),e.ɵɵelementEnd()}if(o&2){let t=e.ɵɵnextContext(),i=e.ɵɵreference(3);e.ɵɵclassMap(t.labelStyleClass),e.ɵɵproperty("ngClass",e.ɵɵpureFunction3(6,C,i.checked,t.disabled,t.focused)),e.ɵɵattribute("for",t.inputId)("data-pc-section","label"),e.ɵɵadvance(1),e.ɵɵtextInterpolate(t.label)}}var y=(o,a,t)=>({"p-radiobutton p-component":!0,"p-radiobutton-checked":o,"p-radiobutton-disabled":a,"p-radiobutton-focused":t}),g=(o,a,t)=>({"p-radiobutton-box":!0,"p-highlight":o,"p-disabled":a,"p-focus":t}),_={provide:m,useExisting:p(()=>w),multi:!0},k=(()=>{class o{accessors=[];add(t,i){this.accessors.push([t,i])}remove(t){this.accessors=this.accessors.filter(i=>i[1]!==t)}select(t){this.accessors.forEach(i=>{this.isSameGroup(i,t)&&i[1]!==t&&i[1].writeValue(t.value)})}isSameGroup(t,i){return t[0].control?t[0].control.root===i.control.control.root&&t[1].name===i.name:!1}static ɵfac=function(i){return new(i||o)};static ɵprov=e.ɵɵdefineInjectable({token:o,factory:o.ɵfac,providedIn:"root"})}return o})(),w=(()=>{class o{cd;injector;registry;value;formControlName;name;disabled;label;tabindex;inputId;ariaLabelledBy;ariaLabel;style;styleClass;labelStyleClass;onClick=new d;onFocus=new d;onBlur=new d;inputViewChild;onModelChange=()=>{};onModelTouched=()=>{};checked;focused;control;constructor(t,i,n){this.cd=t,this.injector=i,this.registry=n}ngOnInit(){this.control=this.injector.get(f),this.checkName(),this.registry.add(this.control,this)}handleClick(t,i,n){t.preventDefault(),!this.disabled&&(this.select(t),n&&i.focus())}select(t){this.disabled||(this.inputViewChild.nativeElement.checked=!0,this.checked=!0,this.onModelChange(this.value),this.registry.select(this),this.onClick.emit({originalEvent:t,value:this.value}))}writeValue(t){this.checked=t==this.value,this.inputViewChild&&this.inputViewChild.nativeElement&&(this.inputViewChild.nativeElement.checked=this.checked),this.cd.markForCheck()}registerOnChange(t){this.onModelChange=t}registerOnTouched(t){this.onModelTouched=t}setDisabledState(t){this.disabled=t,this.cd.markForCheck()}onInputFocus(t){this.focused=!0,this.onFocus.emit(t)}onInputBlur(t){this.focused=!1,this.onModelTouched(),this.onBlur.emit(t)}focus(){this.inputViewChild.nativeElement.focus()}ngOnDestroy(){this.registry.remove(this)}checkName(){this.name&&this.formControlName&&this.name!==this.formControlName&&this.throwNameError(),!this.name&&this.formControlName&&(this.name=this.formControlName)}throwNameError(){throw new Error(`
          If you define both a name and a formControlName attribute on your radio button, their values
          must match. Ex: <p-radioButton formControlName="food" name="food"></p-radioButton>
        `)}static ɵfac=function(i){return new(i||o)(e.ɵɵdirectiveInject(e.ChangeDetectorRef),e.ɵɵdirectiveInject(e.Injector),e.ɵɵdirectiveInject(k))};static ɵcmp=e.ɵɵdefineComponent({type:o,selectors:[["p-radioButton"]],viewQuery:function(i,n){if(i&1&&e.ɵɵviewQuery(b,5),i&2){let r;e.ɵɵqueryRefresh(r=e.ɵɵloadQuery())&&(n.inputViewChild=r.first)}},hostAttrs:[1,"p-element"],inputs:{value:"value",formControlName:"formControlName",name:"name",disabled:"disabled",label:"label",tabindex:"tabindex",inputId:"inputId",ariaLabelledBy:"ariaLabelledBy",ariaLabel:"ariaLabel",style:"style",styleClass:"styleClass",labelStyleClass:"labelStyleClass"},outputs:{onClick:"onClick",onFocus:"onFocus",onBlur:"onBlur"},features:[e.ɵɵProvidersFeature([_])],decls:7,vars:29,consts:[[3,"ngStyle","ngClass","click"],[1,"p-hidden-accessible"],["type","radio",3,"checked","disabled","value","focus","blur"],["input",""],[3,"ngClass"],[1,"p-radiobutton-icon"],[3,"class","ngClass","click",4,"ngIf"],[3,"ngClass","click"]],template:function(i,n){if(i&1){let r=e.ɵɵgetCurrentView();e.ɵɵelementStart(0,"div",0),e.ɵɵlistener("click",function(l){e.ɵɵrestoreView(r);let u=e.ɵɵreference(3);return e.ɵɵresetView(n.handleClick(l,u,!0))}),e.ɵɵelementStart(1,"div",1)(2,"input",2,3),e.ɵɵlistener("focus",function(l){return n.onInputFocus(l)})("blur",function(l){return n.onInputBlur(l)}),e.ɵɵelementEnd()(),e.ɵɵelementStart(4,"div",4),e.ɵɵelement(5,"span",5),e.ɵɵelementEnd()(),e.ɵɵtemplate(6,v,2,10,"label",6)}i&2&&(e.ɵɵclassMap(n.styleClass),e.ɵɵproperty("ngStyle",n.style)("ngClass",e.ɵɵpureFunction3(21,y,n.checked,n.disabled,n.focused)),e.ɵɵattribute("data-pc-name","radiobutton")("data-pc-section","root"),e.ɵɵadvance(1),e.ɵɵattribute("data-pc-section","hiddenInputWrapper"),e.ɵɵadvance(1),e.ɵɵproperty("checked",n.checked)("disabled",n.disabled)("value",n.value),e.ɵɵattribute("id",n.inputId)("name",n.name)("aria-labelledby",n.ariaLabelledBy)("aria-label",n.ariaLabel)("tabindex",n.tabindex)("aria-checked",n.checked)("data-pc-section","hiddenInput"),e.ɵɵadvance(2),e.ɵɵproperty("ngClass",e.ɵɵpureFunction3(25,g,n.checked,n.disabled,n.focused)),e.ɵɵattribute("data-pc-section","input"),e.ɵɵadvance(1),e.ɵɵattribute("data-pc-section","icon"),e.ɵɵadvance(1),e.ɵɵproperty("ngIf",n.label))},dependencies:[s.NgClass,s.NgIf,s.NgStyle],encapsulation:2,changeDetection:0})}return o})(),j=(()=>{class o{static ɵfac=function(i){return new(i||o)};static ɵmod=e.ɵɵdefineNgModule({type:o});static ɵinj=e.ɵɵdefineInjector({imports:[h]})}return o})();export{_ as RADIO_VALUE_ACCESSOR,w as RadioButton,j as RadioButtonModule,k as RadioControlRegistry};